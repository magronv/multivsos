with(RegularChains): with(RAGMaple): read "multivsos1.mm":

### Table 2 (positive definite forms)

p1:= expand(((x^2+1)^2+(y^2+1)^2 + 2*(x+y+1)^2 - 268849736/10^8)^3): 
p2:= expand(((x^2+1)^2+(y^2+1)^2 + 2*(x+y+1)^2 - 268849736/10^8)^5):
eps:= 1 + 1/2^20: p3 := (x^2+y^2+z^2)*(eps*z^6 + eps*x^4*y^2 + eps*x^2*y^4 - 3 * x^2*y^2*z^2): 
eps:=1+1/2^100: p4 := (x^2+y^2+z^2)*(eps*z^6+ eps*x^4*y^2 + eps*x^2*y^4 - 3 * x^2*y^2*z^2): 
f2:=8885*x2^4-16664*x2^3*x1+23195*x2^2*x1^2-24192*x1^3*x2+15570*x1^4:
f3:=15088*x2^3*x1+32724*x2^2*x1^2+9274*x1^3*x2-7000*x1^3*x3-10220*x1^2*x3^2+6440*x3^3*x1+4338*x3^3*x2+2535*x3^2*x2^2-6920*x2^3*x3+12978*x2^4+20242*x1^4+8073*x3^4-18274*x3*x1*x2^2-36238*x1^2*x2*x3+10410*x3^2*x1*x2:
f4:=8718*x2^3*x1+21279*x2^2*x1^2+27448*x1^3*x2+27872*x1^3*x3+34313*x1^2*x3^2+30652*x3^3*x1-40186*x3^3*x2+13302*x3^2*x2^2-4540*x2^3*x3-1642*x1^3*x4-5645*x1^2*x4^2+9808*x4^3*x1-27002*x2^3*x4+33147*x2^2*x4^2-21640*x4^3*x2-16248*x4^3*x3+5262*x4^2*x3^2+10810*x3^3*x4+12493*x2^4+19404*x1^4+26484*x3^4+34078*x1*x2*x3*x4-44866*x3*x1*x2^2+18272*x1^2*x2*x3+21416*x3^2*x1*x2+15292*x1*x2^2*x4-36256*x4^2*x1*x3+1566*x1^2*x4*x2+5690*x4*x1*x3^2-24592*x1*x2*x4^2-10202*x1^2*x3*x4-10636*x2^2*x3*x4+19478*x4^2*x2*x3+4078*x4*x2*x3^2+14569*x4^4:
f5:=10138*x2^3*x1+16255*x2^2*x1^2-24072*x1^3*x2+7346*x1^3*x3+39629*x1^2*x3^2-3140*x3^3*x1+9734*x3^3*x2+28760*x3^2*x2^2+27906*x2^3*x3-1092*x1^3*x4+6935*x1^2*x4^2-31818*x4^3*x1-21610*x2^3*x4+8774*x2^2*x4^2+8142*x4^3*x2-14546*x4^3*x3+58489*x4^2*x3^2+6934*x3^3*x4+9124*x1^3*x5+40873*x1^2*x5^2+13228*x5^3*x1-13166*x2^3*x5+1693*x2^2*x5^2+6858*x5^3*x2-7958*x3^3*x5+15133*x2^4+16002*x1^4+15858*x3^4-1182*x1*x2*x3*x4-15078*x1*x2*x5*x3-45294*x5*x1*x4*x2+21402*x5*x1*x3*x4-37630*x5*x2*x3*x4-1494*x3*x1*x2^2-27960*x1^2*x2*x3-33112*x3^2*x1*x2+3002*x1*x2^2*x4+3072*x4^2*x1*x3-23736*x1^2*x4*x2+17434*x4*x1*x3^2+642*x1*x2*x4^2+25872*x1^2*x3*x4+11792*x2^2*x3*x4+19142*x4^2*x2*x3+19578*x4*x2*x3^2-18200*x1^2*x5*x3-19776*x1^2*x5*x2+1710*x1*x2^2*x5-18904*x1*x2*x5^2+29340*x3^2*x1*x5+17134*x3*x1*x5^2+21062*x5*x1^2*x4+2740*x5*x1*x4^2+1054*x4*x1*x5^2-9916*x2^2*x5*x3+15392*x2*x3^2*x5-12538*x2*x3*x5^2+2188*x5*x2^2*x4-7724*x5*x2*x4^2-4976*x4*x2*x5^2+24490*x5*x3^2*x4-30546*x5*x3*x4^2+38360*x4^4+27088*x5^4+43865*x3^2*x5^2-9242*x5^3*x3+58301*x5^2*x4^2+16272*x5^3*x4-7398*x4^3*x5+17972*x3*x4*x5^2:
f6:=28538*x2^3*x1+29059*x2^2*x1^2+20322*x1^3*x2-20698*x1^3*x3+41251*x1^2*x3^2-14392*x3^3*x1-9432*x3^3*x2+51921*x3^2*x2^2+19056*x2^3*x3+12130*x1^3*x4-6995*x1^2*x4^2+280*x4^3*x1-24594*x2^3*x4+19377*x2^2*x4^2+43216*x4^3*x2-8288*x4^3*x3-11145*x4^2*x3^2-4590*x3^3*x4+9934*x1^3*x5+21251*x1^2*x5^2+9530*x5^3*x1-14310*x2^3*x5-26496*x2^2*x5^2+9494*x5^3*x2+4956*x3^3*x5+28053*x2^4+23891*x1^4+25303*x3^4+9684*x1*x2*x3*x4-14908*x1*x2*x5*x3+59664*x5*x1*x4*x2-9556*x5*x1*x3*x4+44516*x5*x2*x3*x4-36656*x1*x2*x6*x3+13124*x1*x2*x6*x4+22670*x1*x2*x5*x6+6448*x3*x1*x6*x4+15274*x3*x1*x5*x6+57308*x4*x1*x5*x6+25818*x2*x3*x6*x4+19894*x2*x3*x5*x6-2916*x4*x2*x5*x6+2178*x3*x4*x5*x6-6946*x3*x1*x2^2-27050*x1^2*x2*x3+45608*x3^2*x1*x2-45474*x1*x2^2*x4+28144*x4^2*x1*x3-5140*x1^2*x4*x2-2030*x4*x1*x3^2-45354*x1*x2*x4^2+10992*x1^2*x3*x4-256*x2^2*x3*x4+32254*x4^2*x2*x3-33580*x4*x2*x3^2-672*x1^2*x5*x3-632*x1^2*x5*x2+11068*x1*x2^2*x5-36756*x1*x2*x5^2+5502*x3^2*x1*x5-6820*x3*x1*x5^2+18592*x5*x1^2*x4+21424*x5*x1*x4^2-2648*x4*x1*x5^2+20994*x2^2*x5*x3+20460*x2*x3^2*x5-25518*x2*x3*x5^2+27770*x5*x2^2*x4-53692*x5*x2*x4^2+29214*x4*x2*x5^2+23806*x5*x3^2*x4+17358*x5*x3*x4^2+34497*x4^4+17233*x5^4-3958*x3^2*x5^2-24036*x5^3*x3+32359*x5^2*x4^2-31658*x5^3*x4-24146*x4^3*x5-11686*x6^2*x4*x5+4400*x6*x4*x5^2+44978*x3^2*x6*x4+23536*x3^2*x5*x6+47748*x3*x4^2*x6+9298*x3*x4*x6^2+1940*x6^2*x3*x5+6200*x6*x3*x5^2-12348*x4^2*x5*x6-20668*x6^2*x1*x5-23690*x6*x1*x5^2-25270*x2^2*x6*x3+2866*x2^2*x6*x4+10846*x2^2*x5*x6+30890*x2*x3^2*x6-3640*x2*x3*x6^2-36030*x4^2*x2*x6+12138*x4*x2*x6^2+35194*x6^2*x2*x5+7318*x6*x2*x5^2+38384*x1^2*x6*x2+17452*x1^2*x6*x3+3040*x1^2*x6*x4-20400*x1^2*x5*x6+34158*x1*x2^2*x6+19452*x1*x2*x6^2+11860*x3^2*x1*x6-50528*x3*x1*x6^2-34840*x4^2*x1*x6+16352*x4*x1*x6^2+10804*x6^3*x1+17338*x2^3*x6+48261*x2^2*x6^2+9476*x6^3*x2-9960*x3^3*x6+27899*x3^2*x6^2+1646*x6^3*x3-7928*x4^3*x6+12180*x4^2*x6^2+8188*x6^3*x4-5594*x6^3*x5+16034*x6^2*x5^2+3718*x5^3*x6-10030*x1^3*x6+32215*x1^2*x6^2+16919*x6^4+26040*x3*x4*x5^2:
f7:=-7226*x2^3*x1+8641*x2^2*x1^2+14940*x1^3*x2+24862*x1^3*x3+27839*x1^2*x3^2+30330*x3^3*x1-6424*x3^3*x2+16286*x3^2*x2^2+4722*x2^3*x3+15442*x1^3*x4+19590*x1^2*x4^2+4348*x4^3*x1+2682*x2^3*x4+13810*x2^2*x4^2+3636*x4^3*x2+15844*x4^3*x3+36691*x4^2*x3^2-1720*x3^3*x4+16444*x1^3*x5+13525*x1^2*x5^2+16378*x5^3*x1+41922*x2^3*x5+29864*x2^2*x5^2-16776*x5^3*x2+2190*x3^3*x5+29815*x2^4+27629*x1^4+19228*x3^4-30222*x1*x2*x3*x4-44822*x1*x2*x5*x3+21466*x5*x1*x4*x2-11016*x5*x1*x3*x4+20600*x5*x2*x3*x4+43196*x1*x2*x6*x3+23842*x1*x2*x6*x4+13858*x1*x2*x5*x6+18204*x3*x1*x6*x4+38772*x3*x1*x5*x6-17950*x4*x1*x5*x6+26540*x2*x3*x6*x4+12680*x2*x3*x5*x6-85238*x4*x2*x5*x6-32324*x3*x4*x5*x6-8558*x3*x1*x2^2+8052*x1^2*x2*x3-21730*x3^2*x1*x2+26866*x1*x2^2*x4+28556*x4^2*x1*x3+16070*x1^2*x4*x2-32334*x4*x1*x3^2+25004*x1*x2*x4^2+10664*x1^2*x3*x4+31780*x2^2*x3*x4-2898*x4^2*x2*x3-17248*x4*x2*x3^2-3408*x1^2*x5*x3+9164*x1^2*x5*x2-5360*x1*x2^2*x5+8370*x1*x2*x5^2+398*x3^2*x1*x5+5112*x3*x1*x5^2+8148*x5*x1^2*x4+19678*x5*x1*x4^2-24628*x4*x1*x5^2-16280*x2^2*x5*x3-10292*x2*x3^2*x5-51384*x2*x3*x5^2+5402*x5*x2^2*x4-36168*x5*x2*x4^2+14940*x4*x2*x5^2-9264*x5*x3^2*x4+14038*x5*x3*x4^2+16833*x4^4+22766*x5^4+55181*x3^2*x5^2-1446*x5^3*x3+27949*x5^2*x4^2-11238*x5^3*x4-28814*x4^3*x5+45424*x6^2*x4*x5-7916*x6*x4*x5^2+60212*x3^2*x6*x4+17976*x3^2*x5*x6+1404*x3*x4^2*x6-7882*x3*x4*x6^2-3404*x6^2*x3*x5+42324*x6*x3*x5^2+21086*x4^2*x5*x6-18364*x6^2*x1*x5+13880*x6*x1*x5^2-57014*x2^2*x6*x3-19086*x2^2*x6*x4-69154*x2^2*x5*x6-8074*x2*x3^2*x6+2422*x2*x3*x6^2+25050*x4^2*x2*x6+1062*x4*x2*x6^2+28380*x6^2*x2*x5-38280*x6*x2*x5^2+4444*x1^2*x6*x2-11492*x1^2*x6*x3-11242*x1^2*x6*x4-36296*x1^2*x5*x6+7760*x1*x2^2*x6-29616*x1*x2*x6^2+18566*x3^2*x1*x6-30800*x3*x1*x6^2-44514*x4^2*x1*x6+22892*x4*x1*x6^2-1664*x6^3*x1-4988*x2^3*x6+26259*x2^2*x6^2-13056*x6^3*x2+5722*x3^3*x6-313*x3^2*x6^2-10206*x6^3*x3-1568*x4^3*x6+11789*x4^2*x6^2-17672*x6^3*x4-10436*x6^3*x5+14267*x6^2*x5^2+1004*x5^3*x6-39184*x1^3*x6+19257*x1^2*x6^2+19970*x6^4-38528*x3*x4*x5^2-15462*x7^2*x3*x1+11396*x6^2*x1*x7-33800*x6*x1*x7^2-28934*x6^2*x2*x7+40108*x6*x2*x7^2-31914*x6^2*x3*x7-11434*x6*x3*x7^2-18806*x6^2*x4*x7+6290*x6*x4*x7^2+18634*x5*x6^2*x7-38270*x5*x6*x7^2+30626*x2^2*x6*x7+964*x1^2*x7*x3-8906*x1^2*x6*x7-2802*x3^2*x6*x7+3316*x3^2*x7*x1+21136*x4^2*x6*x7-44690*x5^2*x6*x7-332*x3^2*x4*x7-10468*x3*x4^2*x7-16410*x3*x4*x7^2-10920*x5^2*x1*x7+24200*x5*x1^2*x7+11934*x5*x1*x7^2-9512*x5*x2^2*x7+11848*x5^2*x2*x7+6476*x5*x2*x7^2+676*x5*x3^2*x7-43470*x5^2*x3*x7-25010*x5*x3*x7^2-43302*x4^2*x5*x7+72110*x4*x5^2*x7-17406*x4*x5*x7^2-68142*x1*x2^2*x7+24464*x1^2*x2*x7+7830*x1*x2*x7^2+2436*x2^2*x3*x7-15286*x2*x3^2*x7+43390*x2*x3*x7^2-14008*x4^2*x1*x7+29014*x4*x1^2*x7+25492*x4*x1*x7^2-17754*x4*x2^2*x7+13122*x4^2*x2*x7+54830*x4*x2*x7^2+37687*x7^4-2156*x2^3*x7+52424*x2^2*x7^2+18700*x1^3*x7+52094*x1^2*x7^2+12644*x3^3*x7-8082*x3^2*x7^2-2150*x4^3*x7+16042*x4^2*x7^2-816*x5^3*x7+26456*x5^2*x7^2+42550*x7^3*x2-14690*x7^3*x3+27678*x7^3*x4+4834*x7^3*x5+35026*x6^2*x7^2+28512*x6*x7^3-14466*x6^3*x7-13532*x7^3*x1+31874*x5*x2*x6*x7+23246*x5*x3*x6*x7-3482*x4*x5*x6*x7+13096*x6*x1*x7*x3-7706*x1*x2*x7*x5-20302*x1*x2*x6*x7-22130*x2*x3*x7*x4-30448*x2*x3*x7*x5+28654*x2*x3*x6*x7-11656*x4*x1*x7*x3+56610*x4*x1*x7*x5-13392*x4*x1*x6*x7-39022*x4*x2*x7*x5+24798*x4*x2*x6*x7+1234*x3*x4*x7*x5-1236*x3*x4*x6*x7+59132*x5*x1*x7*x3+258*x5*x1*x6*x7-17884*x1*x2*x7*x3+30212*x1*x2*x7*x4:
f8:=-32708*x2^3*x1-4888*x2^2*x1^2+14850*x1^3*x2+38802*x1^3*x3+38203*x1^2*x3^2+9268*x3^3*x1+11374*x3^3*x2-2776*x3^2*x2^2-12764*x2^3*x3-30458*x1^3*x4+5944*x1^2*x4^2+24112*x4^3*x1-6062*x2^3*x4+47212*x2^2*x4^2+26696*x4^3*x2+3694*x4^3*x3+12470*x4^2*x3^2+9248*x3^3*x4+26752*x1^3*x5+25613*x1^2*x5^2+2128*x5^3*x1+30562*x2^3*x5-8981*x2^2*x5^2+14172*x5^3*x2+1794*x3^3*x5+43272*x2^4+26820*x1^4+17946*x3^4-36860*x1*x2*x3*x4+14308*x1*x2*x5*x3+49446*x5*x1*x4*x2+34402*x5*x1*x3*x4+14730*x5*x2*x3*x4-25522*x1*x2*x6*x3+6392*x1*x2*x6*x4+15736*x1*x2*x5*x6-33548*x3*x1*x6*x4-2120*x3*x1*x5*x6+20908*x4*x1*x5*x6-9718*x2*x3*x6*x4-2944*x2*x3*x5*x6+53206*x4*x2*x5*x6+52476*x3*x4*x5*x6+1940*x3*x1*x2^2+32500*x1^2*x2*x3+49922*x3^2*x1*x2+32464*x1*x2^2*x4-46788*x4^2*x1*x3-26014*x1^2*x4*x2+27796*x4*x1*x3^2-19670*x1*x2*x4^2-7124*x1^2*x3*x4-14110*x2^2*x3*x4-54298*x4^2*x2*x3-17334*x4*x2*x3^2+48676*x1^2*x5*x3-11994*x1^2*x5*x2-39590*x1*x2^2*x5-39770*x1*x2*x5^2+11668*x3^2*x1*x5+23768*x3*x1*x5^2+11382*x5*x1^2*x4+11284*x5*x1*x4^2+20166*x4*x1*x5^2-17936*x2^2*x5*x3+22368*x2*x3^2*x5-23896*x2*x3*x5^2-20280*x5*x2^2*x4+30440*x5*x2*x4^2+9712*x4*x2*x5^2-6528*x5*x3^2*x4+2106*x5*x3*x4^2+28631*x4^4+34099*x5^4+20508*x3^2*x5^2-494*x5^3*x3+34777*x5^2*x4^2+4488*x5^3*x4+17130*x4^3*x5+33718*x6^2*x4*x5+25376*x6*x4*x5^2+32222*x3^2*x6*x4-6626*x3^2*x5*x6-4480*x3*x4^2*x6-14698*x3*x4*x6^2+3800*x6^2*x3*x5-31970*x6*x3*x5^2+59062*x4^2*x5*x6+28252*x6^2*x1*x5-26674*x6*x1*x5^2-3316*x2^2*x6*x3-16474*x2^2*x6*x4+746*x2^2*x5*x6+15316*x2*x3^2*x6+32280*x2*x3*x6^2+64586*x4^2*x2*x6+19188*x4*x2*x6^2+6918*x6^2*x2*x5-29980*x6*x2*x5^2-22082*x1^2*x6*x2+11054*x1^2*x6*x3+49350*x1^2*x6*x4-26178*x1^2*x5*x6+47044*x1*x2^2*x6+28966*x1*x2*x6^2+18360*x3^2*x1*x6+2442*x3*x1*x6^2+58154*x4^2*x1*x6+18792*x4*x1*x6^2-3610*x6^3*x1+8964*x2^3*x6-3614*x2^2*x6^2-1440*x6^3*x2+21284*x3^3*x6+55897*x3^2*x6^2+9796*x6^3*x3+15402*x4^3*x6+37474*x4^2*x6^2+52154*x6^3*x4-7570*x6^3*x5+38556*x6^2*x5^2+4988*x5^3*x6-17808*x1^3*x6+38344*x1^2*x6^2+35872*x6^4+35736*x3*x4*x5^2-11908*x7*x1*x8^2+45698*x7^2*x1*x8+38378*x6*x3*x7*x8-8078*x6*x4*x7*x8+130*x5*x6*x7*x8+42584*x5*x3*x8*x6-29444*x5*x3*x7*x8-29056*x4*x5*x8*x6-40512*x4*x5*x7*x8-65380*x6*x1*x7*x8+12206*x6*x2*x7*x8+1444*x4*x2*x8*x5-55100*x4*x2*x8*x6-15190*x4*x2*x7*x8+27082*x3*x4*x8*x5-29632*x3*x4*x8*x6+53178*x3*x4*x7*x8-25838*x5*x1*x8*x6+36350*x5*x1*x7*x8-6880*x5*x2*x8*x6+19768*x5*x2*x7*x8+20425*x8^4+63619*x4^2*x8^2-36810*x4^3*x8+20208*x5^2*x8^2+29878*x5^3*x8+36581*x7^2*x8^2-382*x7^3*x8+19419*x6^2*x8^2+2984*x6^3*x8-27200*x8^3*x4-25686*x8^3*x5-27164*x8^3*x6-12760*x8^3*x7+17126*x8^3*x2-10214*x8^3*x3-18134*x8^3*x1+83096*x2^2*x8^2+19918*x2^3*x8-19441*x1^2*x8^2+9714*x1^3*x8+21228*x3^2*x8^2+26874*x3^3*x8+20384*x7*x3*x8^2-5670*x7^2*x3*x8+6206*x7*x4*x8^2-27158*x7^2*x4*x8+26256*x7*x5*x8^2+2662*x7^2*x5*x8+7060*x6*x7*x8^2-19136*x6^2*x7*x8+5086*x6*x7^2*x8+4240*x6*x3*x8^2-27866*x6^2*x3*x8+11688*x6*x4*x8^2+37796*x6^2*x4*x8+13732*x5*x6*x8^2-9062*x5*x6^2*x8+42936*x7*x2*x8^2+5488*x7^2*x2*x8-21914*x4^2*x8*x6+32746*x4^2*x7*x8+6838*x5^2*x8*x6-11502*x5^2*x7*x8+57474*x6*x1*x8^2-53732*x6^2*x1*x8+1178*x6*x2*x8^2-21240*x6^2*x2*x8-20286*x4*x5*x8^2+21636*x4^2*x5*x8+19050*x4*x5^2*x8-1086*x2^2*x8*x6+20464*x2^2*x7*x8+1252*x1^2*x8*x6-21518*x1^2*x7*x8+7132*x3^2*x8*x6+28242*x3^2*x7*x8-35976*x3*x4*x8^2-7558*x3*x4^2*x8+17696*x3^2*x4*x8-7706*x5*x1*x8^2-3200*x5^2*x1*x8+8826*x5*x1^2*x8+12948*x5*x2*x8^2-83708*x5^2*x2*x8-67682*x5*x2^2*x8+41012*x5*x3*x8^2+34782*x5^2*x3*x8+30188*x5*x3^2*x8-21916*x3*x1*x8^2+3998*x3^2*x1*x8+7156*x3*x1^2*x8-3876*x2*x3*x8^2-33410*x2^2*x3*x8+35418*x2*x3^2*x8+35254*x4*x1*x8^2-52056*x4^2*x1*x8+12170*x4*x1^2*x8+19596*x4*x2*x8^2-12742*x4^2*x2*x8-19062*x4*x2^2*x8-22574*x1*x2*x8^2+30210*x1*x2^2*x8+284*x1^2*x2*x8-242*x1*x2*x8*x4+9146*x1*x2*x8*x5-9764*x1*x2*x8*x6+20488*x1*x2*x7*x8+46292*x1*x2*x8*x3+9904*x3*x1*x8*x4+11148*x3*x1*x8*x5-32222*x3*x1*x8*x6+44678*x3*x1*x7*x8+10388*x2*x3*x8*x4-18544*x2*x3*x8*x5+34346*x2*x3*x8*x6+960*x2*x3*x7*x8-12838*x4*x1*x8*x5-80950*x4*x1*x8*x6-12578*x4*x1*x7*x8-27702*x7^2*x3*x1-36576*x6^2*x1*x7+18584*x6*x1*x7^2+16536*x6^2*x2*x7-5196*x6*x2*x7^2-22512*x6^2*x3*x7+36586*x6*x3*x7^2-2104*x6^2*x4*x7+7288*x6*x4*x7^2-35608*x5*x6^2*x7+33858*x5*x6*x7^2-13982*x2^2*x6*x7+6264*x1^2*x7*x3-30150*x1^2*x6*x7-7496*x3^2*x6*x7-5600*x3^2*x7*x1-150*x4^2*x6*x7-2866*x5^2*x6*x7+11004*x3^2*x4*x7-8802*x3*x4^2*x7+18888*x3*x4*x7^2-30022*x5^2*x1*x7-5770*x5*x1^2*x7-6384*x5*x1*x7^2+41024*x5*x2^2*x7+46664*x5^2*x2*x7+18338*x5*x2*x7^2-17874*x5*x3^2*x7+16424*x5^2*x3*x7-17632*x5*x3*x7^2+47996*x4^2*x5*x7-21900*x4*x5^2*x7-17124*x4*x5*x7^2-9670*x1*x2^2*x7-16616*x1^2*x2*x7-11864*x1*x2*x7^2-32042*x2^2*x3*x7+14630*x2*x3^2*x7-5346*x2*x3*x7^2+4252*x4^2*x1*x7+21478*x4*x1^2*x7-17062*x4*x1*x7^2-9502*x4*x2^2*x7-3776*x4^2*x2*x7-47506*x4*x2*x7^2+18851*x7^4-5752*x2^3*x7+25986*x2^2*x7^2+9808*x1^3*x7+31074*x1^2*x7^2+5540*x3^3*x7+17944*x3^2*x7^2-46160*x4^3*x7+50954*x4^2*x7^2-15448*x5^3*x7+42993*x5^2*x7^2+15730*x7^3*x2+5868*x7^3*x3-10730*x7^3*x4+4596*x7^3*x5+22694*x6^2*x7^2-23544*x6*x7^3-846*x6^3*x7-8132*x7^3*x1+40870*x5*x2*x6*x7+780*x5*x3*x6*x7-44598*x4*x5*x6*x7+12058*x6*x1*x7*x3-58640*x1*x2*x7*x5+52134*x1*x2*x6*x7+40356*x2*x3*x7*x4+2084*x2*x3*x7*x5-20914*x2*x3*x6*x7+91674*x4*x1*x7*x3+50194*x4*x1*x7*x5-51504*x4*x1*x6*x7-18924*x4*x2*x7*x5-14710*x4*x2*x6*x7-1604*x3*x4*x7*x5+10322*x3*x4*x6*x7-39592*x5*x1*x7*x3+29928*x5*x1*x6*x7-36546*x1*x2*x7*x3+19924*x1*x2*x7*x4:
f9:=19588*x2^3*x1+43476*x2^2*x1^2+46840*x1^3*x2-16712*x1^3*x3-16805*x1^2*x3^2-1474*x3^3*x1+18864*x3^3*x2+24491*x3^2*x2^2+11876*x2^3*x3-13314*x1^3*x4+60100*x1^2*x4^2+5070*x4^3*x1-11094*x2^3*x4+45767*x2^2*x4^2+6750*x4^3*x2+14678*x4^3*x3+2436*x4^2*x3^2-11272*x3^3*x4+5312*x1^3*x5+20601*x1^2*x5^2-4452*x5^3*x1+52570*x2^3*x5+17476*x2^2*x5^2-28474*x5^3*x2-68546*x3^3*x5+27103*x2^4+19504*x1^4+41031*x3^4+27820*x1*x2*x3*x4-31792*x1*x2*x5*x3+5012*x5*x1*x4*x2-14222*x5*x1*x3*x4+4842*x5*x2*x3*x4+10344*x1*x2*x6*x3+22586*x1*x2*x6*x4-8048*x1*x2*x5*x6+1172*x3*x1*x6*x4-47332*x3*x1*x5*x6+96*x4*x1*x5*x6-28928*x2*x3*x6*x4+77812*x2*x3*x5*x6+71884*x4*x2*x5*x6+26576*x3*x4*x5*x6-67686*x3*x1*x2^2-55820*x1^2*x2*x3-21926*x3^2*x1*x2+6352*x1*x2^2*x4-36272*x4^2*x1*x3-10602*x1^2*x4*x2+1832*x4*x1*x3^2+47842*x1*x2*x4^2-1814*x1^2*x3*x4+15548*x2^2*x3*x4-7340*x4^2*x2*x3+826*x4*x2*x3^2-422*x1^2*x5*x3+20970*x1^2*x5*x2+18304*x1*x2^2*x5-8702*x1*x2*x5^2+39440*x3^2*x1*x5-1956*x3*x1*x5^2-19458*x5*x1^2*x4+3380*x5*x1*x4^2-2670*x4*x1*x5^2+45028*x2^2*x5*x3-22664*x2*x3^2*x5+28762*x2*x3*x5^2-12150*x5*x2^2*x4+24128*x5*x2*x4^2-13316*x4*x2*x5^2+9604*x5*x3^2*x4-4094*x5*x3*x4^2+22653*x4^4+29556*x5^4+40192*x3^2*x5^2+2124*x5^3*x3+9644*x5^2*x4^2+11346*x5^3*x4+8904*x4^3*x5-60058*x6^2*x4*x5-9056*x6*x4*x5^2-8242*x3^2*x6*x4+52412*x3^2*x5*x6+17064*x3*x4^2*x6+14626*x3*x4*x6^2-416*x6^2*x3*x5-94464*x6*x3*x5^2+8158*x4^2*x5*x6-4884*x6^2*x1*x5-21352*x6*x1*x5^2+43622*x2^2*x6*x3+14198*x2^2*x6*x4-30372*x2^2*x5*x6+16666*x2*x3^2*x6+18740*x2*x3*x6^2-1700*x4^2*x2*x6+31302*x4*x2*x6^2+21314*x6^2*x2*x5-8236*x6*x2*x5^2-14950*x1^2*x6*x2-33998*x1^2*x6*x3+42184*x1^2*x6*x4-7710*x1^2*x5*x6+3474*x1*x2^2*x6-52852*x1*x2*x6^2+18498*x3^2*x1*x6-6734*x3*x1*x6^2-9202*x4^2*x1*x6-2148*x4*x1*x6^2+38328*x6^3*x1-6322*x2^3*x6+23589*x2^2*x6^2-55334*x6^3*x2-1092*x3^3*x6+29999*x3^2*x6^2-5054*x6^3*x3-916*x4^3*x6+14348*x4^2*x6^2-27610*x6^3*x4-22930*x6^3*x5+36662*x6^2*x5^2+912*x5^3*x6-350*x1^3*x6+33934*x1^2*x6^2+41432*x6^4-12336*x3*x4*x5^2+3790*x3*x4*x6*x9-32740*x3*x4*x7*x9+63524*x3*x4*x8*x9-16798*x3*x5*x6*x9+39392*x3*x5*x7*x9-29998*x3*x5*x8*x9+29490*x3*x6*x7*x9-15162*x3*x6*x8*x9-55672*x3*x7*x8*x9+36626*x4*x5*x6*x9+1668*x4*x5*x7*x9+2116*x4*x5*x8*x9-77320*x4*x6*x7*x9-64060*x4*x6*x8*x9-17722*x4*x7*x8*x9-74938*x5*x6*x7*x9+35232*x5*x6*x8*x9+16154*x5*x7*x8*x9-6522*x6*x7*x8*x9-49438*x1*x4*x6*x9+73962*x1*x4*x7*x9+56272*x1*x4*x8*x9+30838*x1*x5*x6*x9+33768*x1*x5*x7*x9-47430*x1*x5*x8*x9-12284*x1*x6*x7*x9-47070*x1*x6*x8*x9-82236*x1*x7*x8*x9+5516*x2*x3*x4*x9+21074*x2*x3*x5*x9-34664*x2*x3*x6*x9-56874*x2*x3*x7*x9+67512*x2*x3*x8*x9-33612*x2*x4*x5*x9-752*x2*x4*x6*x9-29214*x2*x4*x7*x9-31492*x2*x4*x8*x9+25528*x2*x5*x6*x9+17062*x2*x5*x7*x9+17492*x2*x5*x8*x9-13270*x2*x6*x7*x9+61662*x2*x6*x8*x9+36184*x2*x7*x8*x9-26908*x3*x4*x5*x9+27204*x1*x2*x3*x9+17628*x1*x2*x4*x9-26318*x1*x2*x5*x9-44354*x1*x2*x6*x9-23824*x1*x2*x7*x9-44446*x1*x2*x8*x9+14060*x1*x3*x4*x9-29512*x1*x3*x5*x9+24020*x1*x3*x6*x9-17840*x1*x3*x7*x9-41586*x1*x3*x8*x9+534*x1*x4*x5*x9-26702*x7*x1*x8^2+48420*x7^2*x1*x8+18004*x6*x3*x7*x8-31512*x6*x4*x7*x8-3100*x5*x6*x7*x8+10398*x5*x3*x8*x6-18042*x5*x3*x7*x8+61594*x4*x5*x8*x6+22722*x4*x5*x7*x8-36502*x6*x1*x7*x8+77208*x6*x2*x7*x8-8016*x4*x2*x8*x5-44362*x4*x2*x8*x6-51364*x4*x2*x7*x8-24748*x3*x4*x8*x5-43986*x3*x4*x8*x6+29656*x3*x4*x7*x8+67368*x5*x1*x8*x6-28120*x5*x1*x7*x8+28860*x5*x2*x8*x6+9074*x5*x2*x7*x8+21623*x8^4+19651*x4^2*x8^2-23456*x4^3*x8+56987*x5^2*x8^2+3962*x5^3*x8+1071*x7^2*x8^2-8074*x7^3*x8+75656*x6^2*x8^2-12466*x6^3*x8+19344*x8^3*x4-8520*x8^3*x5+12514*x8^3*x6-3848*x8^3*x7-4910*x8^3*x2+11738*x8^3*x3-21062*x8^3*x1+20678*x2^2*x8^2+6774*x2^3*x8+56347*x1^2*x8^2-14448*x1^3*x8+16199*x3^2*x8^2-8036*x3^3*x8-1036*x7*x3*x8^2+27338*x7^2*x3*x8-25730*x7*x4*x8^2-27228*x7^2*x4*x8+51428*x7*x5*x8^2+710*x7^2*x5*x8+15106*x6*x7*x8^2-41484*x6^2*x7*x8-1250*x6*x7^2*x8-14388*x6*x3*x8^2-19136*x6^2*x3*x8+8916*x6*x4*x8^2+30842*x6^2*x4*x8-13738*x5*x6*x8^2-70632*x5*x6^2*x8+21900*x7*x2*x8^2+41262*x7^2*x2*x8-15310*x4^2*x8*x6+30578*x4^2*x7*x8+42372*x5^2*x8*x6-9748*x5^2*x7*x8-19802*x6*x1*x8^2-44076*x6^2*x1*x8+41076*x6*x2*x8^2-5840*x6^2*x2*x8-13734*x4*x5*x8^2+12784*x4^2*x5*x8+29516*x4*x5^2*x8+10666*x2^2*x8*x6+21636*x2^2*x7*x8-22608*x1^2*x8*x6+17188*x1^2*x7*x8+4620*x3^2*x8*x6-7078*x3^2*x7*x8-5716*x3*x4*x8^2-7548*x3*x4^2*x8+26038*x3^2*x4*x8+21792*x5*x1*x8^2+25558*x5^2*x1*x8+3774*x5*x1^2*x8+2774*x5*x2*x8^2+45476*x5^2*x2*x8+5104*x5*x2^2*x8+22442*x5*x3*x8^2+37720*x5^2*x3*x8+22106*x5*x3^2*x8+62670*x3*x1*x8^2+73018*x3^2*x1*x8+16032*x3*x1^2*x8-14574*x2*x3*x8^2+20726*x2^2*x3*x8+27852*x2*x3^2*x8-5912*x4*x1*x8^2+5658*x4^2*x1*x8-35506*x4*x1^2*x8-14630*x4*x2*x8^2-7220*x4^2*x2*x8-36990*x4*x2^2*x8+13878*x1*x2*x8^2-11360*x1*x2^2*x8-21876*x1^2*x2*x8-20274*x1*x2*x8*x4-14622*x1*x2*x8*x5-21010*x1*x2*x8*x6-50616*x1*x2*x7*x8+32458*x1*x2*x8*x3-7592*x3*x1*x8*x4-67084*x3*x1*x8*x5-5898*x3*x1*x8*x6-42966*x3*x1*x7*x8-29274*x2*x3*x8*x4+22244*x2*x3*x8*x5+20824*x2*x3*x8*x6+53124*x2*x3*x7*x8-35694*x4*x1*x8*x5-29560*x4*x1*x8*x6+53228*x4*x1*x7*x8-8810*x7^2*x3*x1-61698*x6^2*x1*x7-17690*x6*x1*x7^2-5846*x6^2*x2*x7-53576*x6*x2*x7^2+67310*x6^2*x3*x7-11652*x6*x3*x7^2+38000*x6^2*x4*x7-49524*x6*x4*x7^2+25042*x5*x6^2*x7+57922*x5*x6*x7^2+22042*x2^2*x6*x7-19062*x1^2*x7*x3+27052*x1^2*x6*x7-58312*x3^2*x6*x7+19880*x3^2*x7*x1-56948*x4^2*x6*x7-71132*x5^2*x6*x7+43042*x3^2*x4*x7-33338*x3*x4^2*x7-37168*x3*x4*x7^2-63576*x5^2*x1*x7+44654*x5*x1^2*x7-9960*x5*x1*x7^2+9412*x5*x2^2*x7+66492*x5^2*x2*x7+28996*x5*x2*x7^2-33526*x5*x3^2*x7+55436*x5^2*x3*x7+8022*x5*x3*x7^2-40460*x4^2*x5*x7+2274*x4*x5^2*x7-12862*x4*x5*x7^2+32720*x1*x2^2*x7+44612*x1^2*x2*x7+51802*x1*x2*x7^2+2978*x2^2*x3*x7-17636*x2*x3^2*x7+15512*x2*x3*x7^2+26440*x4^2*x1*x7-19940*x4*x1^2*x7+4420*x4*x1*x7^2-24068*x4*x2^2*x7+43912*x4^2*x2*x7-8214*x4*x2*x7^2+44650*x7^4+7900*x2^3*x7+54183*x2^2*x7^2+27270*x1^3*x7+60314*x1^2*x7^2-16498*x3^3*x7+59345*x3^2*x7^2-4588*x4^3*x7+79669*x4^2*x7^2+8818*x5^3*x7+68565*x5^2*x7^2+40490*x7^3*x2-18300*x7^3*x3+19958*x7^3*x4-7934*x7^3*x5+26390*x6^2*x7^2-19480*x6*x7^3-17246*x6^3*x7+6066*x7^3*x1-11618*x5*x2*x6*x7-21334*x5*x3*x6*x7+49166*x4*x5*x6*x7+4788*x6*x1*x7*x3+12984*x1*x2*x7*x5+35766*x1*x2*x6*x7+3782*x2*x3*x7*x4-7950*x2*x3*x7*x5-85406*x2*x3*x6*x7+13372*x4*x1*x7*x3+21188*x4*x1*x7*x5+240*x4*x1*x6*x7+26918*x4*x2*x7*x5-44154*x4*x2*x6*x7-39914*x3*x4*x7*x5-28674*x3*x4*x6*x7-2624*x5*x1*x7*x3-7140*x5*x1*x6*x7-20634*x1*x2*x7*x3-864*x1*x2*x7*x4+39880*x9^4+1166*x4*x5*x9^2+30708*x4*x6^2*x9-40526*x4*x6*x9^2-60734*x4*x7^2*x9-13076*x4*x7*x9^2-21472*x4*x8^2*x9-7700*x4*x8*x9^2+3176*x5^2*x6*x9-15928*x5^2*x7*x9+8756*x5^2*x8*x9-20138*x5*x6^2*x9-9604*x5*x6*x9^2+15652*x5*x7^2*x9+38532*x5*x7*x9^2+8500*x5*x8^2*x9-22344*x5*x8*x9^2+38866*x6^2*x7*x9+71084*x6^2*x8*x9-21446*x6*x7^2*x9+12912*x6*x7*x9^2+17972*x6*x8^2*x9+26460*x6*x8*x9^2+30986*x7^2*x8*x9+37174*x7*x8^2*x9+6188*x7*x8*x9^2+1210*x2*x5*x9^2+34374*x2*x6^2*x9-45764*x2*x6*x9^2+18266*x2*x7^2*x9+12874*x2*x7*x9^2+4992*x2*x8^2*x9+74310*x2*x8*x9^2-19136*x3^2*x4*x9+31236*x3^2*x5*x9-19998*x3^2*x6*x9-17088*x3^2*x7*x9-27320*x3^2*x8*x9-14696*x3*x4^2*x9-11304*x3*x4*x9^2-24216*x3*x5^2*x9-25820*x3*x5*x9^2+34590*x3*x6^2*x9+15288*x3*x6*x9^2+10314*x3*x7^2*x9+24986*x3*x7*x9^2+29004*x3*x8^2*x9+4470*x3*x8*x9^2-8630*x4^2*x5*x9-6592*x4^2*x6*x9+31624*x4^2*x7*x9+19270*x4^2*x8*x9+6632*x4*x5^2*x9-23100*x1*x4*x9^2-29060*x1*x5^2*x9+13486*x1*x5*x9^2+16480*x1*x6^2*x9-39304*x1*x6*x9^2-29136*x1*x7^2*x9-41102*x1*x7*x9^2-30830*x1*x8^2*x9+23640*x1*x8*x9^2+34310*x2^2*x3*x9-14506*x2^2*x4*x9-25636*x2^2*x5*x9+35444*x2^2*x6*x9-7570*x2^2*x7*x9+27518*x2^2*x8*x9-33742*x2*x3^2*x9-1580*x2*x3*x9^2+9266*x2*x4^2*x9-19004*x2*x4*x9^2-25986*x2*x5^2*x9-40824*x1^2*x2*x9-28158*x1^2*x3*x9+28678*x1^2*x4*x9+3142*x1^2*x5*x9+36316*x1^2*x6*x9+50318*x1^2*x7*x9-26512*x1^2*x8*x9-18356*x1*x2^2*x9-29996*x1*x2*x9^2+29480*x1*x3^2*x9+22672*x1*x3*x9^2-15548*x1*x4^2*x9+1942*x2*x9^3-11488*x3^3*x9+52477*x3^2*x9^2+15286*x3*x9^3+7830*x4^3*x9-5142*x4^2*x9^2-24818*x4*x9^3-2836*x5^3*x9+56803*x5^2*x9^2-26122*x5*x9^3-37116*x6^3*x9+50752*x6^2*x9^2+2826*x6*x9^3-2030*x7^3*x9+70848*x7^2*x9^2-22914*x7*x9^3+6012*x8^3*x9+43364*x8^2*x9^2+13986*x8*x9^3-1384*x1^3*x9+15057*x1^2*x9^2+6716*x1*x9^3+2176*x2^3*x9+42262*x2^2*x9^2:
f10:=11836*x2^3*x1+20233*x2^2*x1^2-10816*x1^3*x2+12244*x1^3*x3+62396*x1^2*x3^2+5174*x3^3*x1-15998*x3^3*x2-13409*x3^2*x2^2-5766*x2^3*x3-32932*x1^3*x4+50677*x1^2*x4^2-43004*x4^3*x1-31438*x2^3*x4+53722*x2^2*x4^2+52820*x4^3*x2+37782*x4^3*x3+62269*x4^2*x3^2-41096*x3^3*x4-21130*x1^3*x5+69926*x1^2*x5^2-11968*x5^3*x1+10052*x2^3*x5+19004*x2^2*x5^2+3714*x5^3*x2-37634*x3^3*x5+39057*x2^4+39270*x1^4+45467*x3^4+24890*x1*x2*x3*x4+21428*x1*x2*x5*x3+47894*x5*x1*x4*x2+30150*x5*x1*x3*x4+59250*x5*x2*x3*x4-15568*x1*x2*x6*x3-24374*x1*x2*x6*x4-2322*x1*x2*x5*x6-76456*x3*x1*x6*x4+8702*x3*x1*x5*x6-5616*x4*x1*x5*x6-105976*x2*x3*x6*x4-8880*x2*x3*x5*x6-31284*x4*x2*x5*x6-18626*x3*x4*x5*x6+9426*x3*x1*x2^2+24496*x1^2*x2*x3-14892*x3^2*x1*x2+9274*x1*x2^2*x4+16170*x4^2*x1*x3-6882*x1^2*x4*x2-29130*x4*x1*x3^2-3890*x1*x2*x4^2+6948*x1^2*x3*x4+7904*x2^2*x3*x4+43942*x4^2*x2*x3+90544*x4*x2*x3^2+3300*x1^2*x5*x3+33266*x1^2*x5*x2+43438*x1*x2^2*x5+10376*x1*x2*x5^2-8690*x3^2*x1*x5+20306*x3*x1*x5^2+17856*x5*x1^2*x4+40096*x5*x1*x4^2-18258*x4*x1*x5^2+58176*x2^2*x5*x3+6180*x2*x3^2*x5+48838*x2*x3*x5^2+12362*x5*x2^2*x4-20100*x5*x2*x4^2+27540*x4*x2*x5^2+8798*x5*x3^2*x4+94468*x5*x3*x4^2+49075*x4^4+33437*x5^4+15815*x3^2*x5^2+33882*x5^3*x3+64638*x5^2*x4^2+45420*x5^3*x4+8792*x4^3*x5-22492*x6^2*x4*x5-42318*x6*x4*x5^2+44358*x3^2*x6*x4+33966*x3^2*x5*x6-40138*x3*x4^2*x6-37404*x3*x4*x6^2+27536*x6^2*x3*x5+56280*x6*x3*x5^2+7988*x4^2*x5*x6-11754*x6^2*x1*x5-6120*x6*x1*x5^2-10460*x2^2*x6*x3-3334*x2^2*x6*x4+19110*x2^2*x5*x6+27450*x2*x3^2*x6+1146*x2*x3*x6^2-54868*x4^2*x2*x6+18050*x4*x2*x6^2-13928*x6^2*x2*x5-39194*x6*x2*x5^2-7042*x1^2*x6*x2-15712*x1^2*x6*x3+21164*x1^2*x6*x4-36736*x1^2*x5*x6+26910*x1*x2^2*x6+9430*x1*x2*x6^2-628*x3^2*x1*x6+22508*x3*x1*x6^2-58646*x4^2*x1*x6-17774*x4*x1*x6^2-18532*x6^3*x1-10502*x2^3*x6+56635*x2^2*x6^2-3376*x6^3*x2-15492*x3^3*x6+48635*x3^2*x6^2+19616*x6^3*x3-20232*x4^3*x6+48372*x4^2*x6^2+14254*x6^3*x4+24286*x6^3*x5+14248*x6^2*x5^2+1128*x5^3*x6-15106*x1^3*x6+20144*x1^2*x6^2+31303*x6^4+107246*x3*x4*x5^2-12964*x3*x4*x6*x9+17254*x3*x4*x7*x9+30812*x3*x4*x8*x9+34906*x3*x5*x6*x9+24110*x3*x5*x7*x9+30414*x3*x5*x8*x9-37518*x3*x6*x7*x9+27008*x3*x6*x8*x9-10436*x3*x7*x8*x9+70664*x4*x5*x6*x9-33862*x4*x5*x7*x9+92518*x4*x5*x8*x9-30468*x4*x6*x7*x9-35760*x4*x6*x8*x9+72766*x4*x7*x8*x9+1820*x5*x6*x7*x9-62368*x5*x6*x8*x9+66592*x5*x7*x8*x9+73586*x6*x7*x8*x9+18108*x1*x4*x6*x9+848*x1*x4*x7*x9+39830*x1*x4*x8*x9+66042*x1*x5*x6*x9-42112*x1*x5*x7*x9-14806*x1*x5*x8*x9-8760*x1*x6*x7*x9+86842*x1*x6*x8*x9+15964*x1*x7*x8*x9+28298*x2*x3*x4*x9-45114*x2*x3*x5*x9-94178*x2*x3*x6*x9+8918*x2*x3*x7*x9-11314*x2*x3*x8*x9-39650*x2*x4*x5*x9-15690*x2*x4*x6*x9+8044*x2*x4*x7*x9-38980*x2*x4*x8*x9-14040*x2*x5*x6*x9-25032*x2*x5*x7*x9+40198*x2*x5*x8*x9-40878*x2*x6*x7*x9-7308*x2*x6*x8*x9-36234*x2*x7*x8*x9-20038*x3*x4*x5*x9+7410*x1*x2*x3*x9-10960*x1*x2*x4*x9-16136*x1*x2*x5*x9-3256*x1*x2*x6*x9+4710*x1*x2*x7*x9-14396*x1*x2*x8*x9+2264*x1*x3*x4*x9-5474*x1*x3*x5*x9-7166*x1*x3*x6*x9-27110*x1*x3*x7*x9+54820*x1*x3*x8*x9-50008*x1*x4*x5*x9+68362*x7*x1*x8^2-5286*x7^2*x1*x8+14538*x6*x3*x7*x8+25258*x6*x4*x7*x8+14430*x5*x6*x7*x8+2492*x5*x3*x8*x6+7574*x5*x3*x7*x8-12926*x4*x5*x8*x6+1680*x4*x5*x7*x8+96698*x6*x1*x7*x8+71204*x6*x2*x7*x8-9432*x4*x2*x8*x5-6294*x4*x2*x8*x6-61584*x4*x2*x7*x8-23178*x3*x4*x8*x5-9682*x3*x4*x8*x6-52744*x3*x4*x7*x8-1550*x5*x1*x8*x6+3364*x5*x1*x7*x8-29172*x5*x2*x8*x6+616*x5*x2*x7*x8+28472*x8^4+28480*x4^2*x8^2+16484*x4^3*x8+27968*x5^2*x8^2-892*x5^3*x8+52888*x7^2*x8^2+4810*x7^3*x8+59212*x6^2*x8^2+3466*x6^3*x8+17298*x8^3*x4-17642*x8^3*x5+30896*x8^3*x6-10544*x8^3*x7-12204*x8^3*x2+21594*x8^3*x3-14074*x8^3*x1+29095*x2^2*x8^2+996*x2^3*x8+14599*x1^2*x8^2-11102*x1^3*x8+11087*x3^2*x8^2-14480*x3^3*x8+17926*x7*x3*x8^2-6062*x7^2*x3*x8-30628*x7*x4*x8^2-22990*x7^2*x4*x8+34366*x7*x5*x8^2+17460*x7^2*x5*x8+45734*x6*x7*x8^2+42536*x6^2*x7*x8+31844*x6*x7^2*x8+34572*x6*x3*x8^2+12482*x6^2*x3*x8-20762*x6*x4*x8^2+16618*x6^2*x4*x8-45192*x5*x6*x8^2+3988*x5*x6^2*x8+67818*x7*x2*x8^2+1742*x7^2*x2*x8-55426*x4^2*x8*x6-30736*x4^2*x7*x8+13096*x5^2*x8*x6-56696*x5^2*x7*x8+59174*x6*x1*x8^2-13096*x6^2*x1*x8-26244*x6*x2*x8^2-18778*x6^2*x2*x8-19510*x4*x5*x8^2+25934*x4^2*x5*x8+27168*x4*x5^2*x8+27210*x2^2*x8*x6+26220*x2^2*x7*x8-28660*x1^2*x8*x6-28406*x1^2*x7*x8+2570*x3^2*x8*x6-23100*x3^2*x7*x8+67008*x3*x4*x8^2+45206*x3*x4^2*x8+1924*x3^2*x4*x8-32484*x5*x1*x8^2+4334*x5^2*x1*x8+25360*x5*x1^2*x8+13788*x5*x2*x8^2+1094*x5^2*x2*x8+22418*x5*x2^2*x8-978*x5*x3*x8^2-10260*x5^2*x3*x8-4444*x5*x3^2*x8+18898*x3*x1*x8^2+8164*x3^2*x1*x8-58172*x3*x1^2*x8+6042*x2*x3*x8^2-27136*x2^2*x3*x8+1550*x2*x3^2*x8+13506*x4*x1*x8^2-63136*x4^2*x1*x8+35368*x4*x1^2*x8-3170*x4*x2*x8^2-9982*x4^2*x2*x8-46762*x4*x2^2*x8+21216*x1*x2*x8^2+38752*x1*x2^2*x8+48380*x1^2*x2*x8-2022*x1*x2*x8*x4-38348*x1*x2*x8*x5+61216*x1*x2*x8*x6+37562*x1*x2*x7*x8-28870*x1*x2*x8*x3+12562*x3*x1*x8*x4-4240*x3*x1*x8*x5+1552*x3*x1*x8*x6-34392*x3*x1*x7*x8+19892*x2*x3*x8*x4-6168*x2*x3*x8*x5-62*x2*x3*x8*x6-69900*x2*x3*x7*x8-10640*x4*x1*x8*x5+41110*x4*x1*x8*x6+26246*x4*x1*x7*x8+9972*x7^2*x3*x1+26170*x6^2*x1*x7-45474*x6*x1*x7^2-8522*x6^2*x2*x7-736*x6*x2*x7^2+52310*x6^2*x3*x7+5196*x6*x3*x7^2-29644*x6^2*x4*x7-29160*x6*x4*x7^2+3662*x5*x6^2*x7-13140*x5*x6*x7^2+12182*x2^2*x6*x7+13558*x1^2*x7*x3+40*x1^2*x6*x7-34420*x3^2*x6*x7+48564*x3^2*x7*x1-30106*x4^2*x6*x7-13852*x5^2*x6*x7+4836*x3^2*x4*x7+19734*x3*x4^2*x7-17260*x3*x4*x7^2-10558*x5^2*x1*x7-14386*x5*x1^2*x7+1502*x5*x1*x7^2+4550*x5*x2^2*x7-860*x5^2*x2*x7-36482*x5*x2*x7^2+7350*x5*x3^2*x7+7720*x5^2*x3*x7-34522*x5*x3*x7^2-13050*x4^2*x5*x7+12174*x4*x5^2*x7+2282*x4*x5*x7^2-15694*x1*x2^2*x7-8360*x1^2*x2*x7-18508*x1*x2*x7^2+49676*x2^2*x3*x7-59114*x2*x3^2*x7+6516*x2*x3*x7^2-2626*x4^2*x1*x7+3516*x4*x1^2*x7-23846*x4*x1*x7^2-61176*x4*x2^2*x7+4852*x4^2*x2*x7-30888*x4*x2*x7^2+25234*x7^4+34320*x2^3*x7+9052*x2^2*x7^2-34204*x1^3*x7+70078*x1^2*x7^2+1284*x3^3*x7+54302*x3^2*x7^2-43188*x4^3*x7+66708*x4^2*x7^2+15944*x5^3*x7+44475*x5^2*x7^2-20720*x7^3*x2-2424*x7^3*x3-6068*x7^3*x4-8164*x7^3*x5+39617*x6^2*x7^2+11048*x6*x7^3-7768*x6^3*x7-11770*x7^3*x1+24510*x5*x2*x6*x7+33784*x5*x3*x6*x7-5002*x4*x5*x6*x7+28602*x6*x1*x7*x3+37112*x1*x2*x7*x5+27970*x1*x2*x6*x7+30420*x2*x3*x7*x4+27586*x2*x3*x7*x5-14812*x2*x3*x6*x7-44540*x4*x1*x7*x3-64488*x4*x1*x7*x5+18934*x4*x1*x6*x7+52764*x4*x2*x7*x5-18976*x4*x2*x6*x7+2898*x3*x4*x7*x5-5274*x3*x4*x6*x7+6206*x5*x1*x7*x3+45048*x5*x1*x6*x7-35000*x1*x2*x7*x3+49088*x1*x2*x7*x4+69292*x1*x10*x2*x3+20374*x1*x10*x2*x4+8978*x1*x10*x2*x5+9776*x1*x10*x2*x6+30716*x1*x10*x2*x7+21758*x1*x10*x2*x8+18894*x1*x10*x2*x9+17070*x1*x10*x3*x4-37938*x1*x10*x3*x5+35714*x1*x10*x3*x6+33277*x9^4+8630*x4*x5*x9^2+15910*x4*x6^2*x9-17922*x4*x6*x9^2+20634*x4*x7^2*x9+2978*x4*x7*x9^2+54264*x4*x8^2*x9-11836*x4*x8*x9^2-13920*x5^2*x6*x9+38578*x5^2*x7*x9+65430*x5^2*x8*x9+26048*x5*x6^2*x9+25396*x5*x6*x9^2-13660*x5*x7^2*x9-7366*x5*x7*x9^2-58084*x5*x8^2*x9-30780*x5*x8*x9^2-928*x6^2*x7*x9-16182*x6^2*x8*x9-14414*x6*x7^2*x9-3896*x6*x7*x9^2+6526*x6*x8^2*x9+22542*x6*x8*x9^2-23540*x7^2*x8*x9-6170*x7*x8^2*x9+25172*x7*x8*x9^2-21390*x2*x5*x9^2-5604*x2*x6^2*x9-22714*x2*x6*x9^2+16578*x2*x7^2*x9+41178*x2*x7*x9^2+39656*x2*x8^2*x9+3726*x2*x8*x9^2+19862*x3^2*x4*x9-6350*x3^2*x5*x9-30508*x3^2*x6*x9-35860*x3^2*x7*x9-56746*x3^2*x8*x9-44790*x3*x4^2*x9+44930*x3*x4*x9^2+24704*x3*x5^2*x9+35562*x3*x5*x9^2+13738*x3*x6^2*x9+40960*x3*x6*x9^2-17516*x3*x7^2*x9+13710*x3*x7*x9^2+42060*x3*x8^2*x9+41458*x3*x8*x9^2-38728*x4^2*x5*x9+39822*x4^2*x6*x9-27998*x4^2*x7*x9-64386*x4^2*x8*x9-23566*x4*x5^2*x9+9212*x1*x4*x9^2+44164*x1*x5^2*x9+41726*x1*x5*x9^2+23614*x1*x6^2*x9-42656*x1*x6*x9^2-8718*x1*x7^2*x9+29022*x1*x7*x9^2+79972*x1*x8^2*x9+5936*x1*x8*x9^2+33598*x2^2*x3*x9+7898*x2^2*x4*x9+54306*x2^2*x5*x9+21516*x2^2*x6*x9+5306*x2^2*x7*x9-28432*x2^2*x8*x9-4816*x2*x3^2*x9-2330*x2*x3*x9^2+2680*x2*x4^2*x9+4182*x2*x4*x9^2-15644*x2*x5^2*x9-11916*x1^2*x2*x9+16514*x1^2*x3*x9+5804*x1^2*x4*x9-15226*x1^2*x5*x9-23980*x1^2*x6*x9-17238*x1^2*x7*x9-33722*x1^2*x8*x9-19864*x1*x2^2*x9+48714*x1*x2*x9^2-34264*x1*x3^2*x9+16880*x1*x3*x9^2+19300*x1*x4^2*x9-39704*x2*x9^3-4092*x3^3*x9-3491*x3^2*x9^2-16960*x3*x9^3-5948*x4^3*x9+38162*x4^2*x9^2-40582*x4*x9^3-1326*x5^3*x9+49264*x5^2*x9^2+47652*x5*x9^3-9578*x6^3*x9+53066*x6^2*x9^2+33260*x6*x9^3+4798*x7^3*x9-3635*x7^2*x9^2-15910*x7*x9^3+35978*x8^3*x9+47834*x8^2*x9^2+2334*x8*x9^3-602*x1^3*x9-720*x1^2*x9^2-15676*x1*x9^3-18844*x2^3*x9+77012*x2^2*x9^2+24410*x10*x4*x5*x8-30778*x10*x4*x5*x9+16494*x10*x4*x6*x7-7232*x10*x4*x6*x8+34976*x10*x4*x6*x9+104368*x10*x4*x7*x8-41622*x10*x4*x7*x9+14056*x10*x4*x8*x9-6020*x10*x5*x6*x7+4584*x10*x5*x6*x8-27856*x10*x5*x6*x9+14480*x10*x5*x7*x8+75500*x10*x5*x7*x9+2258*x10*x5*x8*x9-51804*x10*x6*x7*x8-18262*x10*x6*x7*x9+32630*x10*x6*x8*x9+20238*x10*x7*x8*x9+13142*x10*x2*x3*x4+29640*x10*x2*x3*x5+18106*x10*x2*x3*x6-5430*x10*x2*x3*x7+77098*x10*x2*x3*x8+45412*x10*x2*x3*x9-5202*x10*x2*x4*x5+84452*x10*x2*x4*x6-16876*x10*x2*x4*x7+62744*x10*x2*x4*x8-864*x10*x2*x4*x9-86750*x10*x2*x5*x6+91270*x10*x2*x5*x7+9874*x10*x2*x5*x8+31746*x10*x2*x5*x9+32160*x10*x2*x6*x7-6186*x10*x2*x6*x8-47960*x10*x2*x6*x9+41072*x10*x2*x7*x8-23144*x10*x2*x7*x9+64882*x10*x2*x8*x9+25676*x10*x3*x4*x5+55806*x10*x3*x4*x6-53830*x10*x3*x4*x7+44512*x10*x3*x4*x8+7540*x10*x3*x4*x9-21132*x10*x3*x5*x6-102044*x10*x3*x5*x7+80506*x10*x3*x5*x8-51838*x10*x3*x5*x9-28806*x10*x3*x6*x7+18070*x10*x3*x6*x8+18094*x10*x3*x6*x9+28184*x10*x3*x7*x8-9000*x10*x3*x7*x9+5380*x10*x3*x8*x9-28570*x10*x4*x5*x6-22588*x10*x4*x5*x7-37934*x1*x10*x3*x7+12382*x1*x10*x3*x8+5830*x1*x10*x3*x9+87694*x1*x10*x4*x5-52952*x1*x10*x4*x6+17182*x1*x10*x4*x7+26300*x1*x10*x4*x8-58446*x1*x10*x4*x9+38142*x1*x10*x5*x6-85070*x1*x10*x5*x7+2960*x1*x10*x5*x8+1372*x1*x10*x5*x9+79530*x1*x10*x6*x7-11830*x1*x10*x6*x8+9210*x1*x10*x6*x9-1758*x1*x10*x7*x8+13380*x1*x10*x7*x9+21606*x1*x10*x8*x9+2100*x1^3*x10+3145*x1^2*x10^2+988*x1*x10^3+32452*x10^3*x2-26950*x10^3*x3+17406*x10^3*x4-37578*x10^3*x5-8902*x10^3*x6-20734*x10^3*x7-25220*x10^3*x8+38886*x10^3*x9+82221*x10^2*x2^2+2143*x10^2*x3^2+49311*x10^2*x4^2+59291*x10^2*x5^2+78311*x10^2*x6^2+35948*x10^2*x7^2+56942*x10^2*x8^2+81051*x10^2*x9^2-6256*x10*x2^3+31418*x10*x3^3-17054*x10*x4^3-12980*x10*x5^3-2866*x10*x6^3+1896*x10*x7^3+14852*x10*x8^3+3216*x10*x9^3+56096*x10^4+19138*x10*x7^2*x9-47564*x10*x7*x8^2-8902*x10*x7*x9^2+78120*x10*x8^2*x9-1946*x10*x8*x9^2-30944*x10^2*x2*x9-18358*x10^2*x3*x4-7306*x10^2*x3*x5+53094*x10^2*x3*x6+28830*x10^2*x3*x7+38088*x10^2*x3*x8-26406*x10^2*x3*x9+17588*x10^2*x4*x5-14588*x10^2*x4*x6-32242*x10^2*x4*x7+12998*x10^2*x4*x8-9742*x10^2*x4*x9+17520*x10^2*x5*x6+5958*x10^2*x5*x7+37254*x10^2*x5*x8+1324*x10^2*x5*x9+11844*x10^2*x6*x7-2082*x10^2*x6*x8+51802*x10^2*x6*x9+37950*x10^2*x7*x8-62148*x10^2*x7*x9-40820*x10^2*x8*x9-10200*x10*x2^2*x3+21964*x10*x2^2*x4+17294*x10*x2^2*x5-63426*x10*x2^2*x6-47520*x10*x2^2*x7+16040*x10*x2^2*x8-25826*x10*x2^2*x9-22942*x10*x2*x3^2-69530*x10*x2*x4^2+43102*x10*x2*x5^2-10964*x10*x2*x6^2-27432*x10*x2*x7^2+57990*x10*x2*x8^2-25200*x10*x2*x9^2-52590*x10*x3^2*x4-66472*x10*x3^2*x5+14340*x10*x3^2*x6+22836*x10*x3^2*x7-89300*x10*x3^2*x8+11132*x10*x3^2*x9-15634*x10*x3*x4^2-8720*x10*x3*x5^2+2828*x10*x3*x6^2+17818*x10*x3*x7^2-39652*x10*x3*x8^2-11356*x10*x3*x9^2-13860*x10*x4^2*x5+55316*x10*x4^2*x6-83468*x10*x4^2*x7-3596*x10*x4^2*x8+34190*x10*x4^2*x9-6960*x10*x4*x5^2+32936*x10*x4*x6^2+75812*x10*x4*x7^2+17146*x10*x4*x8^2+41802*x10*x4*x9^2+10344*x10*x5^2*x6-48712*x10*x5^2*x7+44656*x10*x5^2*x8-12300*x10*x5^2*x9-7668*x10*x5*x6^2-17648*x10*x5*x7^2-8750*x10*x5*x8^2+39704*x10*x5*x9^2-48336*x10*x6^2*x7-19762*x10*x6^2*x8+15850*x10*x6^2*x9-1762*x10*x6*x7^2-54160*x10*x6*x8^2-28066*x10*x6*x9^2+4896*x10*x7^2*x8-2842*x1*x10^2*x7+30080*x1*x10^2*x8-29276*x1*x10^2*x9+15674*x1*x10*x2^2-57644*x1*x10*x3^2+14124*x1*x10*x4^2+43928*x1*x10*x5^2-24108*x1*x10*x6^2+7122*x1*x10*x7^2-7238*x1*x10*x8^2+32438*x1*x10*x9^2-73572*x10^2*x2*x3-23308*x10^2*x2*x4-33732*x10^2*x2*x5-10598*x10^2*x2*x6+9610*x10^2*x2*x7+606*x10^2*x2*x8+18908*x1^2*x10*x2+14136*x1^2*x10*x3-17024*x1^2*x10*x4-34912*x1^2*x10*x5-37296*x1^2*x10*x6+10868*x1^2*x10*x7+41200*x1^2*x10*x8-2158*x1^2*x10*x9-29570*x1*x10^2*x2+49268*x1*x10^2*x3+24564*x1*x10^2*x4+59604*x1*x10^2*x5-8076*x1*x10^2*x6:
f12 := expand((28538*x2^3*x1+29059*x2^2*x1^2+20322*x1^3*x2-20698*x1^3*x3+41251*x1^2*x3^2-14392*x3^3*x1-9432*x3^3*x2+51921*x3^2*x2^2+19056*x2^3*x3+12130*x1^3*x4-6995*x1^2*x4^2+280*x4^3*x1-24594*x2^3*x4+19377*x2^2*x4^2+43216*x4^3*x2-8288*x4^3*x3-11145*x4^2*x3^2-4590*x3^3*x4+9934*x1^3*x5+21251*x1^2*x5^2+9530*x5^3*x1-14310*x2^3*x5-26496*x2^2*x5^2+9494*x5^3*x2+4956*x3^3*x5+28053*x2^4+23891*x1^4+25303*x3^4+9684*x1*x2*x3*x4-14908*x1*x2*x5*x3+59664*x5*x1*x4*x2-9556*x5*x1*x3*x4+44516*x5*x2*x3*x4-36656*x1*x2*x6*x3+13124*x1*x2*x6*x4+22670*x1*x2*x5*x6+6448*x3*x1*x6*x4+15274*x3*x1*x5*x6+57308*x4*x1*x5*x6+25818*x2*x3*x6*x4+19894*x2*x3*x5*x6-2916*x4*x2*x5*x6+2178*x3*x4*x5*x6-6946*x3*x1*x2^2-27050*x1^2*x2*x3+45608*x3^2*x1*x2-45474*x1*x2^2*x4+28144*x4^2*x1*x3-5140*x1^2*x4*x2-2030*x4*x1*x3^2-45354*x1*x2*x4^2+10992*x1^2*x3*x4-256*x2^2*x3*x4+32254*x4^2*x2*x3-33580*x4*x2*x3^2-672*x1^2*x5*x3-632*x1^2*x5*x2+11068*x1*x2^2*x5-36756*x1*x2*x5^2+5502*x3^2*x1*x5-6820*x3*x1*x5^2+18592*x5*x1^2*x4+21424*x5*x1*x4^2-2648*x4*x1*x5^2+20994*x2^2*x5*x3+20460*x2*x3^2*x5-25518*x2*x3*x5^2+27770*x5*x2^2*x4-53692*x5*x2*x4^2+29214*x4*x2*x5^2+23806*x5*x3^2*x4+17358*x5*x3*x4^2+34497*x4^4+17233*x5^4-3958*x3^2*x5^2-24036*x5^3*x3+32359*x5^2*x4^2-31658*x5^3*x4-24146*x4^3*x5-11686*x6^2*x4*x5+4400*x6*x4*x5^2+44978*x3^2*x6*x4+23536*x3^2*x5*x6+47748*x3*x4^2*x6+9298*x3*x4*x6^2+1940*x6^2*x3*x5+6200*x6*x3*x5^2-12348*x4^2*x5*x6-20668*x6^2*x1*x5-23690*x6*x1*x5^2-25270*x2^2*x6*x3+2866*x2^2*x6*x4+10846*x2^2*x5*x6+30890*x2*x3^2*x6-3640*x2*x3*x6^2-36030*x4^2*x2*x6+12138*x4*x2*x6^2+35194*x6^2*x2*x5+7318*x6*x2*x5^2+38384*x1^2*x6*x2+17452*x1^2*x6*x3+3040*x1^2*x6*x4-20400*x1^2*x5*x6+34158*x1*x2^2*x6+19452*x1*x2*x6^2+11860*x3^2*x1*x6-50528*x3*x1*x6^2-34840*x4^2*x1*x6+16352*x4*x1*x6^2+10804*x6^3*x1+17338*x2^3*x6+48261*x2^2*x6^2+9476*x6^3*x2-9960*x3^3*x6+27899*x3^2*x6^2+1646*x6^3*x3-7928*x4^3*x6+12180*x4^2*x6^2+8188*x6^3*x4-5594*x6^3*x5+16034*x6^2*x5^2+3718*x5^3*x6-10030*x1^3*x6+32215*x1^2*x6^2+16919*x6^4+26040*x3*x4*x5^2)^2):

### Table 3 (positive polynomials over basic compact semialgebraic sets)
f46 := -x1-x2 + 55081/10000: g46 := [2*x1^4 - 8*x1^3 + 8*x1^2 + 2-x2,4*x1^4-32*x1^3 + 88*x1^2-96*x1+36-x2,x1*(3-x1),x2*(4-x2)]: 


butcher := (x6*x2^2+x5*x3^2-x1*x4^2+x4^3+x4^2-1/3*x1+4/3*x4):
gbutcher := [((x1 + 1 / 1) * (0 / 1 - x1)),((x2 + 1 / 10) * (9 / 10 - x2)),((x3 + 1 / 10) * (5 / 10 - x3)),((x4 + 1 / 1) * (-1 / 10 - x4)),((x5 + 1 / 10) * (-5 / 100 - x5)),((x6 + 1 / 10) * (-3 / 100 - x6))]:
gbutcherRAG := [(x1 + 1 / 1), (0 / 1 - x1),(x2 + 1 / 10), (9 / 10 - x2),(x3 + 1 / 10), (5 / 10 - x3),(x4 + 1 / 1), (-1 / 10 - x4),(x5 + 1 / 10), (-5 / 100 - x5),(x6 + 1 / 10), (-3 / 100 - x6)]:

heart := (-x1*x6^3+3/1*x1*x6*x7^2-x3*x7^3+3/1*x3*x7*x6^2-x2*x5^3+3/1*x2*x5*x8^2-x4*x8^3+3/1*x4*x8*x5^2-9563453/10000000):
gheart := [((x1 + 1 / 10) * (4 / 10 - x1)),((x2 - 4 / 10) * (1 / 1 - x2)),((x3 + 7 / 10) * (-4 / 10 - x3)),((x4 + 7 / 10) * (4 / 10 - x4)),((x5 - 1 / 10) * (2 / 10 - x5)),((x6 + 1 / 10) * (2 / 10 - x6)),((x7 + 3 / 10) * (11 / 10 - x7)),((x8 + 11 / 10) * (-3 / 10 - x8))]:
gheartRAG := [(x1 + 1 / 10), (4 / 10 - x1),(x2 - 4 / 10), (1 / 1 - x2),(x3 + 7 / 10), (-4 / 10 - x3),(x4 + 7 / 10), (4 / 10 - x4),(x5 - 1 / 10), (2 / 10 - x5),(x6 + 1 / 10), (2 / 10 - x6),(x7 + 3 / 10), (11 / 10 - x7),(x8 + 11 / 10), (-3 / 10 - x8)]:


magnetism := (x1^2+2/1*x2^2+2/1*x3^2+2/1*x4^2+2/1*x5^2+2/1*x6^2+2/1*x7^2-x1);
gmagnetism := [((x1 + 1 / 1) * (1 / 1 - x1)),((x2 + 1 / 1) * (1 / 1 - x2)),((x3 + 1 / 1) * (1 / 1 - x3)),((x4 + 1 / 1) * (1 / 1 - x4)),((x5 + 1 / 1) * (1 / 1 - x5)),((x6 + 1 / 1) * (1 / 1 - x6)),((x7 + 1 / 1) * (1 / 1 - x7))]:
gmagnetismRAG := [(x1 + 1 / 1), (1 / 1 - x1),(x2 + 1 / 1), (1 / 1 - x2),(x3 + 1 / 1), (1 / 1 - x3),(x4 + 1 / 1), (1 / 1 - x4),(x5 + 1 / 1), (1 / 1 - x5),(x6 + 1 / 1), (1 / 1 - x6),(x7 + 1 / 1), (1 / 1 - x7)]:

fs260 := (-(x1 * x4 * ((- x1) + x2 + x3 - x4 + x5 + x6) + x2 * x5 * (x1 - x2 + x3 + x4 - x5 + x6) + x3 * x6 * (x1 + x2 - x3 + x4 + x5 - x6) - x2 * x3 * x4 - x1 * x3 * x5 - x1 * x2 * x6 - x4 * x5 * x6)):
gs260 := [-(-60/1+ (x1 * x4 * ((- x1) + x2 + x3 - x4 + x5 + x6)+ x2 * x5 * (x1 - x2 + x3 + x4 - x5 + x6) + x3 * x6 * (x1 + x2 - x3 + x4 + x5 - x6) - x2 * x3 * x4 - x1 * x3 * x5 - x1 * x2 * x6 - x4 * x5 * x6)), -((- x2) * x3 - x1 * x4 + x2 * x5 + x3 * x6 - x5 * x6 + x1 * ((- x1) + x2 + x3 - x4 + x5 + x6)), ((x1 - 606887582536 / 100000000000) * (702674064 / 100000000 - x1)), ((x2 - 4 / 1) * (8 / 1 - x2)),((x3 - 4 / 1) * (8 / 1 - x3)),((x4 - 4 / 1) * (702674064 / 100000000 - x4)), ((x5 - 4 / 1) * (8 / 1 - x5)),((x6 - 4 / 1) * (8 / 1 - x6))]:
gs260RAG := [-(-60/1+ (x1 * x4 * ((- x1) + x2 + x3 - x4 + x5 + x6)+ x2 * x5 * (x1 - x2 + x3 + x4 - x5 + x6) + x3 * x6 * (x1 + x2 - x3 + x4 + x5 - x6) - x2 * x3 * x4 - x1 * x3 * x5 - x1 * x2 * x6 - x4 * x5 * x6)), -((- x2) * x3 - x1 * x4 + x2 * x5 + x3 * x6 - x5 * x6 + x1 * ((- x1) + x2 + x3 - x4 + x5 + x6)), (x1 - 606887582536 / 100000000000), (702674064 / 100000000 - x1), (x2 - 4 / 1), (8 / 1 - x2),(x3 - 4 / 1), (8 / 1 - x3),(x4 - 4 / 1), (702674064 / 100000000 - x4), (x5 - 4 / 1), (8 / 1 - x5),(x6 - 4 / 1), (8 / 1 - x6)]:

fs491 := (-(x1 * x4 * ((- x1) + x2 + x3 - x4 + x5 + x6) + x2 * x5 * (x1 - x2 + x3 + x4 - x5 + x6)+ x3 * x6 * (x1 + x2 - x3 + x4 + x5 - x6) - x2 * x3 * x4 - x1 * x3 * x5- x1 * x2 * x6 - x4 * x5 * x6)):
gs491 := [-(14/100 + (x1 * x4 * ((- x1) + x2 + x3 - x4 + x5 + x6)+ x2 * x5 * (x1 - x2 + x3 + x4 - x5 + x6)+ x3 * x6 * (x1 + x2 - x3 + x4 + x5 - x6) - x2 * x3 * x4- x1 * x3 * x5 - x1 * x2 * x6 - x4 * x5 * x6)),-(-25/1     + ((- x2) * x3 - x1 * x4 + x2 * x5 + x3 * x6 - x5 * x6 + x1 * ((- x1) + x2 + x3 - x4 + x5 + x6))), ((x1 - 606887582536 / 100000000000) * (702674064 / 100000000 - x1)),((x2 - 4 / 1) * (8 / 1 - x2)), ((x3 - 2 / 1) * (2 / 1 - x3)),((x4 - 2 / 1) * (2 / 1 - x4)), ((x5 - 2 / 1) * (2 / 1 - x5)), ((x6 - 4 / 1) * (8 / 1 - x6))]:
gs491RAG := [-(14/100 + (x1 * x4 * ((- x1) + x2 + x3 - x4 + x5 + x6)+ x2 * x5 * (x1 - x2 + x3 + x4 - x5 + x6)+ x3 * x6 * (x1 + x2 - x3 + x4 + x5 - x6) - x2 * x3 * x4- x1 * x3 * x5 - x1 * x2 * x6 - x4 * x5 * x6)),-(-25/1     + ((- x2) * x3 - x1 * x4 + x2 * x5 + x3 * x6 - x5 * x6 + x1 * ((- x1) + x2 + x3 - x4 + x5 + x6))), (x1 - 606887582536 / 100000000000) , (702674064 / 100000000 - x1),(x2 - 4 / 1) , (8 / 1 - x2), (x3 - 2 / 1) , (2 / 1 - x3),(x4 - 2 / 1) , (2 / 1 - x4), (x5 - 2 / 1) , (2 / 1 - x5), (x6 - 4 / 1) , (8 / 1 - x6)]:


fs752 := ((- x2) * x3 - x1 * x4+ x2 * x5 + x3 * x6 - x5 * x6 + x1 * ((- x1) + x2 + x3 - x4 + x5 + x6)):
gs752 := [((x1 - 4 / 1) * (63504 / 10000 - x1)),((x2 - 4 / 1) * (63504 / 10000 - x2)),((x3 - 4 / 1) * (63504 / 10000 - x3)),((x4 - 4 / 1) * (63504 / 10000 - x4)),((x5 - 4 / 1) * (63504 / 10000 - x5)),((x6 - 8 / 1) * (254016 / 10000 - x6))]:
gs752RAG := [(x1 - 4 / 1) , (63504 / 10000 - x1),(x2 - 4 / 1) , (63504 / 10000 - x2),(x3 - 4 / 1) , (63504 / 10000 - x3),(x4 - 4 / 1) , (63504 / 10000 - x4),(x5 - 4 / 1) , (63504 / 10000 - x5),(x6 - 8 / 1) , (254016 / 10000 - x6)]:

#fs859 := (2 / 25* ((- 2/1) * x4 * x4 * x4 * x4 * x4 * x1 + 256/1 * (x5 + (- 1/1) * x6) * (x5 + (- 1/1) * x6) * (x5 + (- 1/1) * x6) * (x2 + (- 1/1) * x3) + x4 * x4 * x4 * (2/1 * ((- 256/1) + x5 * x5 + (- 2/1) * x5 * x6 + x6 * x6) * x1+ (x5 * x5 * ((- 8/1) + x6) + (- 16/1) * x5 * (3/1 + x6) + 16/1 * (16/1 + 9/1 * x6))* x2+ (x5 * (144/1 + (- 16/1) * x6 + x6 * x6) + (- 8/1) * ((- 32/1) + 6/1 * x6 + x6 * x6))* x3) + 2/1 * x4 * x4 * x4 * x4 * (32/1 * x1 + 3/1 * (((- 8/1) + x5) * x2 + ((- 8/1) + x6) * x3)) + 200/1 * (x4 * x4 * x1+ 8/1 * (x5 + (- 1/1) * x6) * (x2 + (- 1/1) * x3)+ (- 1/1)* x4* (16/1 * x1 + ((- 8/1) + x5) * x2 + ((- 8/1) + x6) * x3)) * (x4 * x4 * x1+ 8/1 * (x5 + (- 1/1) * x6) * (x2 + (- 1/1) * x3)+ (- 1/1)* x4* (16/1 * x1 + ((- 8/1) + x5) * x2 + ((- 8/1) + x6) * x3)) + 2/1 * x4 * x4 * (x5 + (- 1/1) * x6) * (x5 * x5 * x2+ 8/1 * x6 * (4/1 * x1 + 9/1 * x2 + (- 7/1) * x3)+ 384/1 * (x2 + (- 1/1) * x3)+ (- 1/1) * x6 * x6 * x3+ x5* ((- 32/1) * x1 + (56/1 + (- 9/1) * x6) * x2 + 9/1 * ((- 8/1) + x6) * x3)) + (- 16/1) * x4 * (x5 + (- 1/1) * x6) * (x5 * x5 * (x2 + (- 3/1) * x3)+ (- 4/1)* x5* (8/1 * x1 + ((- 20/1) + 3/1 * x6) * x2 + (- 3/1) * ((- 4/1) + x6) * x3)+ x6* (32/1 * x1 + 3/1 * (16/1 + x6) * x2 + (- 1/1) * (80/1 + x6) * x3)))): gs859 := [((x1 - 1 / 1) * (117547965573 / 100000000000 - x1)), ((x2 - 1 / 1) * (117547965573 / 100000000000 - x2)), ((x3 - 1 / 1) * (117547965573 / 100000000000 - x3)), ((x4 - 251952632905 / 100000000000) * (1553 / 100 - x4)),((x5 - 251952632905 / 100000000000) * (16 / 1 - x5)),((x6 - 251952632905 / 100000000000) * (16 / 1 - x6))]:

fs859 := eval(2 / 25* ((- 2/1) * x4 * x4 * x4 * x4 * x4 * x1 + 256/1 * (x5 + (- 1/1) * x6) * (x5 + (- 1/1) * x6) * (x5 + (- 1/1) * x6) * (x2 + (- 1/1) * x3) + x4 * x4 * x4 * (2/1 * ((- 256/1) + x5 * x5 + (- 2/1) * x5 * x6 + x6 * x6) * x1+ (x5 * x5 * ((- 8/1) + x6) + (- 16/1) * x5 * (3/1 + x6) + 16/1 * (16/1 + 9/1 * x6))* x2+ (x5 * (144/1 + (- 16/1) * x6 + x6 * x6) + (- 8/1) * ((- 32/1) + 6/1 * x6 + x6 * x6))* x3) + 2/1 * x4 * x4 * x4 * x4 * (32/1 * x1 + 3/1 * (((- 8/1) + x5) * x2 + ((- 8/1) + x6) * x3)) + 200/1 * (x4 * x4 * x1+ 8/1 * (x5 + (- 1/1) * x6) * (x2 + (- 1/1) * x3)+ (- 1/1)* x4* (16/1 * x1 + ((- 8/1) + x5) * x2 + ((- 8/1) + x6) * x3)) * (x4 * x4 * x1+ 8/1 * (x5 + (- 1/1) * x6) * (x2 + (- 1/1) * x3)+ (- 1/1)* x4* (16/1 * x1 + ((- 8/1) + x5) * x2 + ((- 8/1) + x6) * x3)) + 2/1 * x4 * x4 * (x5 + (- 1/1) * x6) * (x5 * x5 * x2+ 8/1 * x6 * (4/1 * x1 + 9/1 * x2 + (- 7/1) * x3)+ 384/1 * (x2 + (- 1/1) * x3)+ (- 1/1) * x6 * x6 * x3+ x5* ((- 32/1) * x1 + (56/1 + (- 9/1) * x6) * x2 + 9/1 * ((- 8/1) + x6) * x3)) + (- 16/1) * x4 * (x5 + (- 1/1) * x6) * (x5 * x5 * (x2 + (- 3/1) * x3)+ (- 4/1)* x5* (8/1 * x1 + ((- 20/1) + 3/1 * x6) * x2 + (- 3/1) * ((- 4/1) + x6) * x3)+ x6* (32/1 * x1 + 3/1 * (16/1 + x6) * x2 + (- 1/1) * (80/1 + x6) * x3))), [x1 = 1*y1 + 117547965573 / 100000000000, x2 = 1*y2 + 117547965573 / 100000000000, x3 = 1*y3 + 117547965573 / 100000000000, x4 = 251952632905 / 100000000000*y4 + 16, x5 = 251952632905 / 100000000000*y5 + 16, x6= 251952632905 / 100000000000*y6 + 16] ): 
gs859 := [y1* (1 - y1), y2* (1 - y2), y3* (1 - y3),y4* (1 - y4),y5* (1 - y5),y6* (1 - y6)]:
gs859RAG := [y1, (1 - y1), y2, (1 - y2), y3, (1 - y3),y4, (1 - y4),y5, (1 - y5),y6, (1 - y6)]:


fs863 := (- ((- x2) * 4 - x1 * x4+ x2 * x5 + 4 * 4 - x5 * 4 + x1 * ((- x1) + x2 + 4 - x4 + x5 + 4))):
gs863 := [((x1 - 4 / 1) * (63504 / 10000 - x1)),((x2 - 4 / 1) * (63504 / 10000 - x2)),((x4 - 90601 / 10000) * (90601 / 10000 - x4)),((x5 - 4 / 1) * (63504 / 10000 - x5))]:
gs863RAG := [(x1 - 4 / 1) , (63504 / 10000 - x1),(x2 - 4 / 1) , (63504 / 10000 - x2),(x4 - 90601 / 10000) , (90601 / 10000 - x4),(x5 - 4 / 1) , (63504 / 10000 - x5)]:

fs884 := eval((-(  x1* (x1 * x4 * ((- x1) + x2 + x3 - x4 + x5 + x6)     + x2 * x5 * (x1 - x2 + x3 + x4 - x5 + x6)       + x3 * x6 * (x1 + x2 - x3 + x4 + x5 - x6) - x2 * x3 * x4         - x1 * x3 * x5 - x1 * x2 * x6 - x4 * x5 * x6)  * (4/1)  + ((- x2) * x3 - x1 * x4     + x2 * x5 + x3 * x6 - x5 * x6 + x1 * ((- x1) + x2 + x3 - x4 + x5 + x6))    * ((- x2) * x3 - x1 * x4       + x2 * x5 + x3 * x6 - x5 * x6 + x1 * ((- x1) + x2 + x3 - x4 + x5 + x6))    * (- 245468/1000000))),[x2=63504 / 10000,x4=4]): 
gs884 := [eval(-(-302/10+ (x1 * x4 * ((- x1) + x2 + x3 - x4 + x5 + x6)+ x2 * x5 * (x1 - x2 + x3 + x4 - x5 + x6)+ x3 * x6 * (x1 + x2 - x3 + x4 + x5 - x6) - x2 * x3 * x4- x1 * x3 * x5 - x1 * x2 * x6 - x4 * x5 * x6)),[x2=63504 / 10000,x4=4]),  ((x1 - 4 / 1) * (63504 / 10000 - x1)), ((x3 - 4 / 1) * (63504 / 10000 - x3)),((x5 - 90601 / 10000) * (104976 / 10000 - x5)),((x6 - 4 / 1) * (63504 / 10000 - x6))]:
gs884RAG := [eval(-(-302/10+ (x1 * x4 * ((- x1) + x2 + x3 - x4 + x5 + x6)+ x2 * x5 * (x1 - x2 + x3 + x4 - x5 + x6)+ x3 * x6 * (x1 + x2 - x3 + x4 + x5 - x6) - x2 * x3 * x4- x1 * x3 * x5 - x1 * x2 * x6 - x4 * x5 * x6)),[x2=63504 / 10000,x4=4]),  (x1 - 4 / 1) , (63504 / 10000 - x1), (x3 - 4 / 1) , (63504 / 10000 - x3),(x5 - 90601 / 10000) , (104976 / 10000 - x5),(x6 - 4 / 1) , (63504 / 10000 - x6)]:


fs890 := eval((-(  x1 * x4 * ((- x1) + x2 + x3 - x4 + x5 + x6)+ x2 * x5 * (x1 - x2 + x3 + x4 - x5 + x6)+ x3 * x6 * (x1 + x2 - x3 + x4 + x5 - x6) - x2 * x3 * x4 - x1 * x3 * x5- x1 * x2 * x6 - x4 * x5 * x6)),[x4=4,x5=4]):
gs890 := [eval((x1* (x1 * x4 * ((- x1) + x2 + x3 - x4 + x5 + x6)        + x2 * x5 * (x1 - x2 + x3 + x4 - x5 + x6)          + x3 * x6 * (x1 + x2 - x3 + x4 + x5 - x6) - x2 * x3 * x4            - x1 * x3 * x5 - x1 * x2 * x6 - x4 * x5 * x6)     * (4/1)     + ((- x2) * x3 - x1 * x4        + x2 * x5          + x3 * x6 - x5 * x6 + x1 * ((- x1) + x2 + x3 - x4 + x5 + x6))       * ((- x2) * x3 - x1 * x4          + x2 * x5            + x3 * x6 - x5 * x6 + x1 * ((- x1) + x2 + x3 - x4 + x5 + x6))       * (- 243621/100000)),[x4=4,x5=4]), ((x1 - 4 / 1) * (63504 / 10000 - x1)),((x2 - 4 / 1) * (63504 / 10000 - x2)),((x3 - 4 / 1) * (63504 / 10000 - x3)),((x6 - 90601 / 10000) * (104721490449 / 10000000000 - x6))]:
gs890RAG := [eval((x1* (x1 * x4 * ((- x1) + x2 + x3 - x4 + x5 + x6)        + x2 * x5 * (x1 - x2 + x3 + x4 - x5 + x6)          + x3 * x6 * (x1 + x2 - x3 + x4 + x5 - x6) - x2 * x3 * x4            - x1 * x3 * x5 - x1 * x2 * x6 - x4 * x5 * x6)     * (4/1)     + ((- x2) * x3 - x1 * x4        + x2 * x5          + x3 * x6 - x5 * x6 + x1 * ((- x1) + x2 + x3 - x4 + x5 + x6))       * ((- x2) * x3 - x1 * x4          + x2 * x5            + x3 * x6 - x5 * x6 + x1 * ((- x1) + x2 + x3 - x4 + x5 + x6))       * (- 243621/100000)),[x4=4,x5=4]), (x1 - 4 / 1) , (63504 / 10000 - x1),(x2 - 4 / 1) , (63504 / 10000 - x2),(x3 - 4 / 1) , (63504 / 10000 - x3),(x6 - 90601 / 10000) , (104721490449 / 10000000000 - x6)]:

#x1 := 4*y1+ 63504/10000: x2 := 4*y2+ 63504/10000: x3 := 4*y3+ 63504/10000: x6 := 90601 / 10000*y6+104721490449 / 10000000000: fs890 := eval((-(  x1 * x4 * ((- x1) + x2 + x3 - x4 + x5 + x6)+ x2 * x5 * (x1 - x2 + x3 + x4 - x5 + x6)+ x3 * x6 * (x1 + x2 - x3 + x4 + x5 - x6) - x2 * x3 * x4 - x1 * x3 * x5- x1 * x2 * x6 - x4 * x5 * x6)),[x4=4,x5=4]): gs890 := [eval((x1* (x1 * x4 * ((- x1) + x2 + x3 - x4 + x5 + x6)        + x2 * x5 * (x1 - x2 + x3 + x4 - x5 + x6)          + x3 * x6 * (x1 + x2 - x3 + x4 + x5 - x6) - x2 * x3 * x4            - x1 * x3 * x5 - x1 * x2 * x6 - x4 * x5 * x6)     * (4/1)     + ((- x2) * x3 - x1 * x4        + x2 * x5          + x3 * x6 - x5 * x6 + x1 * ((- x1) + x2 + x3 - x4 + x5 + x6))       * ((- x2) * x3 - x1 * x4          + x2 * x5            + x3 * x6 - x5 * x6 + x1 * ((- x1) + x2 + x3 - x4 + x5 + x6))       * (- 243621/100000)),[x4=4,x5=4]), ((y1 - 0) * (1 - y1)),((y2 - 0) * (1 - y2)),((y3) * (1 - y3)),((y6) * (1 - y6))]:


### Table 2 (positive definite forms)

## example Issac paper 
multivsos1(x^4 + x^3*y - 7/4*x^2*y^2 - 1/2*x*y^3 + 5/2*y^4,2,30,200,30,2,10,false,1);
# sos_decomp := 1/12*(X_1*X_2-X_2^2)^2 + 5/36*(X_1*X_2)^2 + 395/7056*X_2^4 + (X_1^2+1/2*X_1*X_2-4/3*X_2^2)^2 + (2/3*X_1*X_2+3/4*X_2^2)^2+(X_2^2/7)^2);

## multivsos
multivsos1(p1,50,40,200,30,30,100,true,1): 
multivsos1(p2,50,40,200,30,30,100,true,1): 
multivsos1(p3,20,10,200,30,30,100,false,1): 
multivsos1(p4,100,60,200,30,30,100,true,1): 
multivsos1(f2,10,10,200,30,30,100,false,1): 
multivsos1(f4,10,10,200,30,30,100,false,1): 
multivsos1(f6,10,10,200,30,30,100,false,1): 
multivsos1(f8,10,10,200,30,30,100,false,1): 
multivsos1(f10,10,10,200,30,30,100,false,1): 
multivsos1(f12,20,10,200,30,30,100,false,1): 

## PP
multivsos1(p1,0,0,200,30,30,100,true,2): 
multivsos1(p2,0,0,200,30,30,100,true,2):
multivsos1(p3,0,0,200,30,30,100,false,2):  
multivsos1(p4,0,0,200,30,30,100,true,2): 
multivsos1(f2,0,0,200,30,30,100,false,2): 
multivsos1(f4,0,0,200,30,30,100,false,2): 
multivsos1(f6,0,0,200,30,30,100,false,2): 
multivsos1(f8,0,0,200,30,30,100,false,2): 
multivsos1(f10,0,0,200,30,30,100,false,2): 
multivsos1(f12,0,0,200,30,30,100,false,2): 

## RAGLib
benchRAGLib(p1):
benchRAGLib(p2):
benchRAGLib(p3):
benchRAGLib(p4):
benchRAGLib(f2):
benchRAGLib(f4):
benchRAGLib(f6):
benchRAGLib(f8):
benchRAGLib(f10):
benchRAGLib(f12):

## CAD
benchSamplePoints(p1):
benchSamplePoints(p2):
benchSamplePoints(p3):
benchSamplePoints(p4):
benchSamplePoints(f2):
benchSamplePoints(f4):
benchSamplePoints(f6):
benchSamplePoints(f8):
benchSamplePoints(f10):
benchSamplePoints(f12):

### Table 3 (positive polynomials over basic compact semialgebraic sets)

## Issac example
multivsos1(-X_1^2  - 2 * X_1 * X_2 - 2 * X_2^2  + 6,1,10,200,30,3,100,false,1,[1 - X_1^2, 1 - X_2^2]):
# expand(23853407/292204836 + 23/49*X_1^2 + 130657269/291009481*X_2^2 + (1/2442)^2 + (X_1-X_2)^2 + (1/2437*X_2)^2+(11/7)^2*(1-X_1^2) + (13/7)^2*(1-X_2^2));

## multivsos
multivsos1(f46,30,10,200,30,30,100,true,1,g46,3): # 45 601
multivsos1(fs260,10,10,200,30,30,100,true,1,gs260): # 114 464
multivsos1(fs491,10,10,200,30,30,100,true,1,gs491): # 108 674
multivsos1(fs752,10,10,200,30,30,100,false,1,gs752): # 10 110
multivsos1(fs859,10,10,200,30,30,100,false,1,gs859): # 6 362 897
multivsos1(fs863,20,10,200,30,30,100,false,1,gs863): # 5 488
multivsos1(fs884,30,30,200,30,30,100,true,1,gs884,3): # 305 237
multivsos1(fs890,10,30,200,30,30,100,true,1,gs890): # 60 301
multivsos1(butcher - (-14394 / 10000),20,10,200,30,30,100,false,1,gbutcher): # 123 026
multivsos1((2191 / 10000)- butcher,20,10,200,30,30,100,false,1,gbutcher): # 124 437
multivsos1(heart - (-1744 / 1000),20,10,200,30,30,100,false,1,gheart): # 309 788
multivsos1((1369 / 1000)- heart,20,10,200,30,30,100,false,1,gheart): # 309 133
multivsos1(magnetism - (-2501 / 10000),20,10,200,30,30,100,false,1,gmagnetism): # 4 754
multivsos1((140001 / 10000)- magnetism,20,10,200,30,30,100,false,1,gmagnetism): # 4 846

## RAGLib
benchRAGLib(f46,g46);
benchRAGLib(fs260,gs260RAG);
benchRAGLib(fs491,gs491RAG);
benchRAGLib(fs752,gs752RAG);
benchRAGLib(fs859,gs859RAG):  # Error, (in fgbrs:-fgb_gbasis) Not the same size after backward !
benchRAGLib(fs863,gs863RAG);
benchRAGLib(fs884,gs884RAG);
benchRAGLib(fs890,gs890RAG);
benchRAGLib(butcher - (-14394 / 10000),gbutcherRAG); # 0.11 s
benchRAGLib((2191 / 10000)- butcher,gbutcherRAG); # 47.1 s
benchRAGLib(heart - (-1744 / 1000),gheartRAG): # 0.27 s
benchRAGLib((1369 / 1000)- heart,gheartRAG); # 0.27 s
benchRAGLib(magnetism - (-2501 / 10000),gmagnetismRAG); # 212 s
benchRAGLib((140001 / 10000)- magnetism,gmagnetismRAG); # 222 s

## CAD
benchSamplePoints(f46,g46):
benchSamplePoints(fs260,gs260):
benchSamplePoints(fs491,gs491):
benchSamplePoints(fs752,gs752):
benchSamplePoints(fs859,gs859):
benchSamplePoints(fs863,gs863):
benchSamplePoints(fs884,gs884):
benchSamplePoints(fs890,gs890):
benchSamplePoints(butcher - (-14394 / 10000),gbutcher):
benchSamplePoints((2191 / 10000)- butcher,gbutcher):
benchSamplePoints(heart - (-1744 / 1000),gheart):
benchSamplePoints((1369 / 1000)- heart,gheart):
benchSamplePoints(magnetism - (-2501 / 10000),gmagnetism): 
benchSamplePoints((140001 / 10000)- magnetism,gmagnetism): 
